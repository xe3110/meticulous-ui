{"version":3,"file":"_getRawTag.js","sources":["../../../node_modules/lodash-es/_getRawTag.js"],"sourcesContent":["import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n"],"names":["objectProto","hasOwnProperty","nativeObjectToString","symToStringTag","Symbol","getRawTag","value","isOwn","tag","unmasked","result"],"mappings":";AAGA,IAAIA,IAAc,OAAO,WAGrBC,IAAiBD,EAAY,gBAO7BE,IAAuBF,EAAY,UAGnCG,IAAiBC,IAASA,EAAO,cAAc;AASnD,SAASC,EAAUC,GAAO;AACxB,MAAIC,IAAQN,EAAe,KAAKK,GAAOH,CAAc,GACjDK,IAAMF,EAAMH,CAAc;AAE9B,MAAI;AACF,IAAAG,EAAMH,CAAc,IAAI;AACxB,QAAIM,IAAW;AAAA,EACjB,QAAY;AAAA,EAAC;AAEb,MAAIC,IAASR,EAAqB,KAAKI,CAAK;AAC5C,SAAIG,MACEF,IACFD,EAAMH,CAAc,IAAIK,IAExB,OAAOF,EAAMH,CAAc,IAGxBO;AACT;","x_google_ignoreList":[0]}