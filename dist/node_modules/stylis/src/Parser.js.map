{"version":3,"file":"Parser.js","sources":["../../../../node_modules/stylis/src/Parser.js"],"sourcesContent":["import {COMMENT, RULESET, DECLARATION} from './Enum.js'\nimport {abs, charat, trim, from, sizeof, strlen, substr, append, replace, indexof} from './Utility.js'\nimport {node, char, prev, next, peek, caret, alloc, dealloc, delimit, whitespace, escaping, identifier, commenter} from './Tokenizer.js'\n\n/**\n * @param {string} value\n * @return {object[]}\n */\nexport function compile (value) {\n\treturn dealloc(parse('', null, null, null, [''], value = alloc(value), 0, [0], value))\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {string[]} rule\n * @param {string[]} rules\n * @param {string[]} rulesets\n * @param {number[]} pseudo\n * @param {number[]} points\n * @param {string[]} declarations\n * @return {object}\n */\nexport function parse (value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {\n\tvar index = 0\n\tvar offset = 0\n\tvar length = pseudo\n\tvar atrule = 0\n\tvar property = 0\n\tvar previous = 0\n\tvar variable = 1\n\tvar scanning = 1\n\tvar ampersand = 1\n\tvar character = 0\n\tvar type = ''\n\tvar props = rules\n\tvar children = rulesets\n\tvar reference = rule\n\tvar characters = type\n\n\twhile (scanning)\n\t\tswitch (previous = character, character = next()) {\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (previous != 108 && charat(characters, length - 1) == 58) {\n\t\t\t\t\tif (indexof(characters += replace(delimit(character), '&', '&\\f'), '&\\f', abs(index ? points[index - 1] : 0)) != -1)\n\t\t\t\t\t\tampersand = -1\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t// \" ' [\n\t\t\tcase 34: case 39: case 91:\n\t\t\t\tcharacters += delimit(character)\n\t\t\t\tbreak\n\t\t\t// \\t \\n \\r \\s\n\t\t\tcase 9: case 10: case 13: case 32:\n\t\t\t\tcharacters += whitespace(previous)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tcharacters += escaping(caret() - 1, 7)\n\t\t\t\tcontinue\n\t\t\t// /\n\t\t\tcase 47:\n\t\t\t\tswitch (peek()) {\n\t\t\t\t\tcase 42: case 47:\n\t\t\t\t\t\tappend(comment(commenter(next(), caret()), root, parent, declarations), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcharacters += '/'\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t// {\n\t\t\tcase 123 * variable:\n\t\t\t\tpoints[index++] = strlen(characters) * ampersand\n\t\t\t// } ; \\0\n\t\t\tcase 125 * variable: case 59: case 0:\n\t\t\t\tswitch (character) {\n\t\t\t\t\t// \\0 }\n\t\t\t\t\tcase 0: case 125: scanning = 0\n\t\t\t\t\t// ;\n\t\t\t\t\tcase 59 + offset: if (ampersand == -1) characters = replace(characters, /\\f/g, '')\n\t\t\t\t\t\tif (property > 0 && (strlen(characters) - length))\n\t\t\t\t\t\t\tappend(property > 32 ? declaration(characters + ';', rule, parent, length - 1, declarations) : declaration(replace(characters, ' ', '') + ';', rule, parent, length - 2, declarations), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @ ;\n\t\t\t\t\tcase 59: characters += ';'\n\t\t\t\t\t// { rule/at-rule\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tappend(reference = ruleset(characters, root, parent, index, offset, rules, points, type, props = [], children = [], length, rulesets), rulesets)\n\n\t\t\t\t\t\tif (character === 123)\n\t\t\t\t\t\t\tif (offset === 0)\n\t\t\t\t\t\t\t\tparse(characters, root, reference, reference, props, rulesets, length, points, children)\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tswitch (atrule === 99 && charat(characters, 3) === 110 ? 100 : atrule) {\n\t\t\t\t\t\t\t\t\t// d l m s\n\t\t\t\t\t\t\t\t\tcase 100: case 108: case 109: case 115:\n\t\t\t\t\t\t\t\t\t\tparse(value, reference, reference, rule && append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length, children), children), rules, children, length, points, rule ? props : children)\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tparse(characters, reference, reference, reference, [''], children, 0, points, children)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tindex = offset = property = 0, variable = ampersand = 1, type = characters = '', length = pseudo\n\t\t\t\tbreak\n\t\t\t// :\n\t\t\tcase 58:\n\t\t\t\tlength = 1 + strlen(characters), property = previous\n\t\t\tdefault:\n\t\t\t\tif (variable < 1)\n\t\t\t\t\tif (character == 123)\n\t\t\t\t\t\t--variable\n\t\t\t\t\telse if (character == 125 && variable++ == 0 && prev() == 125)\n\t\t\t\t\t\tcontinue\n\n\t\t\t\tswitch (characters += from(character), character * variable) {\n\t\t\t\t\t// &\n\t\t\t\t\tcase 38:\n\t\t\t\t\t\tampersand = offset > 0 ? 1 : (characters += '\\f', -1)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// ,\n\t\t\t\t\tcase 44:\n\t\t\t\t\t\tpoints[index++] = (strlen(characters) - 1) * ampersand, ampersand = 1\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @\n\t\t\t\t\tcase 64:\n\t\t\t\t\t\t// -\n\t\t\t\t\t\tif (peek() === 45)\n\t\t\t\t\t\t\tcharacters += delimit(next())\n\n\t\t\t\t\t\tatrule = peek(), offset = length = strlen(type = characters += identifier(caret())), character++\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// -\n\t\t\t\t\tcase 45:\n\t\t\t\t\t\tif (previous === 45 && strlen(characters) == 2)\n\t\t\t\t\t\t\tvariable = 0\n\t\t\t\t}\n\t\t}\n\n\treturn rulesets\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} index\n * @param {number} offset\n * @param {string[]} rules\n * @param {number[]} points\n * @param {string} type\n * @param {string[]} props\n * @param {string[]} children\n * @param {number} length\n * @param {object[]} siblings\n * @return {object}\n */\nexport function ruleset (value, root, parent, index, offset, rules, points, type, props, children, length, siblings) {\n\tvar post = offset - 1\n\tvar rule = offset === 0 ? rules : ['']\n\tvar size = sizeof(rule)\n\n\tfor (var i = 0, j = 0, k = 0; i < index; ++i)\n\t\tfor (var x = 0, y = substr(value, post + 1, post = abs(j = points[i])), z = value; x < size; ++x)\n\t\t\tif (z = trim(j > 0 ? rule[x] + ' ' + y : replace(y, /&\\f/g, rule[x])))\n\t\t\t\tprops[k++] = z\n\n\treturn node(value, root, parent, offset === 0 ? RULESET : type, props, children, length, siblings)\n}\n\n/**\n * @param {number} value\n * @param {object} root\n * @param {object?} parent\n * @param {object[]} siblings\n * @return {object}\n */\nexport function comment (value, root, parent, siblings) {\n\treturn node(value, root, parent, COMMENT, from(char()), substr(value, 2, -2), 0, siblings)\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} length\n * @param {object[]} siblings\n * @return {object}\n */\nexport function declaration (value, root, parent, length, siblings) {\n\treturn node(value, root, parent, DECLARATION, substr(value, 0, length), substr(value, length + 1, -1), length, siblings)\n}\n"],"names":["compile","value","dealloc","parse","alloc","root","parent","rule","rules","rulesets","pseudo","points","declarations","index","offset","length","atrule","property","previous","variable","scanning","ampersand","character","type","props","children","reference","characters","next","charat","indexof","replace","delimit","abs","whitespace","escaping","caret","peek","append","comment","commenter","strlen","declaration","ruleset","prev","from","identifier","siblings","post","size","sizeof","j","k","x","y","substr","z","trim","node","RULESET","COMMENT","char","DECLARATION"],"mappings":"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","x_google_ignoreList":[0]}