import { assign as p, strlen as x, charat as h, trim as j, from as q, substr as z, append as A } from "./Utility.js";
var u = 1, a = 1, b = 0, r = 0, n = 0, t = "";
function B(e, c, m, g, k, w, d, v) {
  return { value: e, root: c, parent: m, type: g, props: k, children: w, line: u, column: a, length: d, return: "", siblings: v };
}
function C(e, c) {
  return p(B("", null, null, "", null, null, 0, e.siblings), e, { length: -e.length }, c);
}
function F(e) {
  for (; e.root; )
    e = C(e.root, { children: [e] });
  A(e, e.siblings);
}
function G() {
  return n;
}
function H() {
  return n = r > 0 ? h(t, --r) : 0, a--, n === 10 && (a = 1, u--), n;
}
function i() {
  return n = r < b ? h(t, r++) : 0, a++, n === 10 && (a = 1, u++), n;
}
function s() {
  return h(t, r);
}
function D() {
  return r;
}
function l(e, c) {
  return z(t, e, c);
}
function f(e) {
  switch (e) {
    // \0 \t \n \r \s whitespace token
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    // ! + , / > @ ~ isolate token
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    // ; { } breakpoint token
    case 59:
    case 123:
    case 125:
      return 4;
    // : accompanied token
    case 58:
      return 3;
    // " ' ( [ opening delimit token
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    // ) ] closing delimit token
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function I(e) {
  return u = a = 1, b = x(t = e), r = 0, [];
}
function J(e) {
  return t = "", e;
}
function K(e) {
  return j(l(r - 1, o(e === 91 ? e + 2 : e === 40 ? e + 1 : e)));
}
function L(e) {
  for (; (n = s()) && n < 33; )
    i();
  return f(e) > 2 || f(n) > 3 ? "" : " ";
}
function M(e, c) {
  for (; --c && i() && !(n < 48 || n > 102 || n > 57 && n < 65 || n > 70 && n < 97); )
    ;
  return l(e, D() + (c < 6 && s() == 32 && i() == 32));
}
function o(e) {
  for (; i(); )
    switch (n) {
      // ] ) " '
      case e:
        return r;
      // " '
      case 34:
      case 39:
        e !== 34 && e !== 39 && o(n);
        break;
      // (
      case 40:
        e === 41 && o(e);
        break;
      // \
      case 92:
        i();
        break;
    }
  return r;
}
function N(e, c) {
  for (; i() && e + n !== 57; )
    if (e + n === 84 && s() === 47)
      break;
  return "/*" + l(c, r - 1) + "*" + q(e === 47 ? e : i());
}
function O(e) {
  for (; !f(s()); )
    i();
  return l(e, r);
}
export {
  I as alloc,
  D as caret,
  G as char,
  n as character,
  t as characters,
  a as column,
  N as commenter,
  C as copy,
  J as dealloc,
  K as delimit,
  o as delimiter,
  M as escaping,
  O as identifier,
  b as length,
  F as lift,
  u as line,
  i as next,
  B as node,
  s as peek,
  r as position,
  H as prev,
  l as slice,
  f as token,
  L as whitespace
};
//# sourceMappingURL=Tokenizer.js.map
